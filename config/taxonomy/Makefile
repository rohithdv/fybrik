ROOT_DIR := ../..
include $(ROOT_DIR)/Makefile.env
include $(ROOT_DIR)/hack/make-rules/tools.mk

.DEFAULT_GOAL := all
all: clean $(ROOT_DIR)/charts/fybrik/files/taxonomy/taxonomy.json generate-base generate-client

charts/taxonomy.json:
	go run $(ROOT_DIR)/main.go taxonomy compile --base ./base/base.yaml --out $(ROOT_DIR)/charts/fybrik/files/taxonomy/taxonomy.json
	go run $(ROOT_DIR)/main.go taxonomy validate $(ROOT_DIR)/charts/fybrik/files/taxonomy/policy_manager_request.json
	go run $(ROOT_DIR)/main.go taxonomy validate $(ROOT_DIR)/charts/fybrik/files/taxonomy/policy_manager_response.json
	go run $(ROOT_DIR)/main.go taxonomy validate $(ROOT_DIR)/charts/fybrik/files/taxonomy/fybrik_application.json
	go run $(ROOT_DIR)/main.go taxonomy validate $(ROOT_DIR)/charts/fybrik/files/taxonomy/fybrik_module.json
	go run $(ROOT_DIR)/main.go taxonomy validate $(ROOT_DIR)/charts/fybrik/files/taxonomy/data_catalog_request.json
	go run $(ROOT_DIR)/main.go taxonomy validate $(ROOT_DIR)/charts/fybrik/files/taxonomy/data_catalog_response.json

.PHONY: generate-base-policymanager
generate-base-policymanager: $(TOOLBIN)/openapi-generator-cli charts/taxonomy.json
	mkdir -p $(ROOT_DIR)/pkg/taxonomy/model/policymanager/base
	$(TOOLBIN)/openapi-generator-cli generate -i ./policymanager.spec.yaml -g go -o $(ROOT_DIR)/pkg/taxonomy/model/policymanager/base --global-property=models,modelDocs=false \
		--additional-properties=packageName=base \
		--enable-post-process-file \
		--type-mappings=object=interface{}

.PHONY: generate-base-datacatalog
generate-base-datacatalog: $(TOOLBIN)/openapi-generator-cli charts/taxonomy.json
	mkdir -p $(ROOT_DIR)/pkg/taxonomy/model/datacatalog/base
	$(TOOLBIN)/openapi-generator-cli generate -i ./datacatalog.spec.yaml -g go -o $(ROOT_DIR)/pkg/taxonomy/model/datacatalog/base --global-property=models,modelDocs=false \
		--additional-properties=packageName=base \
		--enable-post-process-file \
		--type-mappings=object=interface{}

.PHONY: generate-client-policymanager
generate-client-policymanager: $(TOOLBIN)/openapi-generator-cli charts/taxonomy.json
	mkdir -p $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient
	$(TOOLBIN)/openapi-generator-cli generate -g go --additional-properties=packageName=openapiclient,isGoSubmodule=false \
		--global-property=apis,supportingFiles,apiDocs=false -o $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient \
		-i policymanager.spec.yaml
	rm -f $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/go.mod $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/go.sum $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/.travis.yml
	rm -f $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/README.md $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/git_push.sh
	rm -r $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/api

.PHONY: generate-client-datacatalog
generate-client-datacatalog: $(TOOLBIN)/openapi-generator-cli charts/taxonomy.json
	mkdir -p $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient
	$(TOOLBIN)/openapi-generator-cli generate -g go --additional-properties=packageName=openapiclient,isGoSubmodule=false \
		--global-property=apis,supportingFiles,apiDocs=false -o $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient \
		-i datacatalog.spec.yaml
	rm -f $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/go.mod $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/go.sum $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/.travis.yml
	rm -f $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/README.md $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/git_push.sh
	rm -f $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/.gitignore $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/.openapi-generator-ignore $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/.openapi-generator/FILES
	rm -r $(ROOT_DIR)/pkg/connectors/datacatalog/openapiclient/api
	
.PHONY: generate-server
generate-server: clean-server $(TOOLBIN)/openapi-generator-cli charts/taxonomy.json
	mkdir -p $(ROOT_DIR)/connectors/opa
	$(TOOLBIN)/openapi-generator-cli generate -g go-gin-server \
		--additional-properties=packageName=openapiserver,serverPort=8081,sourceFolder=openapiserver \
		--global-property=apis,supportingFiles -o $(ROOT_DIR)/connectors/opa \
		-i policymanager.spec.yaml
	rm -f $(ROOT_DIR)/connectors/opa/go.mod $(ROOT_DIR)/connectors/opa/.openapi-generator-ignore
	rm -f $(ROOT_DIR)/connectors/opa/Dockerfile $(ROOT_DIR)/connectors/opa/go/README.md
	rm -r $(ROOT_DIR)/connectors/opa/api $(ROOT_DIR)/connectors/opa/.openapi-generator

generate-documentation: $(TOOLBIN)/openapi-generator-cli 
	mkdir -p $(ROOT_DIR)/connector-docs/openapigenerator-documentation-policymanager
	$(TOOLBIN)/openapi-generator-cli generate -i policymanager.spec.yaml -g html -o $(ROOT_DIR)/connector-docs/openapigenerator-documentation-policymanager
	mkdir -p $(ROOT_DIR)/connector-docs/openapigenerator-documentation-datacatalog
	$(TOOLBIN)/openapi-generator-cli generate -i datacatalog.spec.yaml -g html -o $(ROOT_DIR)/connector-docs/openapigenerator-documentation-datacatalog

	mkdir -p $(ROOT_DIR)/connector-docs/redoc-datacatalog
	redoc-cli bundle datacatalog.spec.yaml -o $(ROOT_DIR)/connector-docs/redoc-datacatalog/datacatalog.html
	mkdir -p $(ROOT_DIR)/connector-docs/redoc-policymanager
	redoc-cli bundle policymanager.spec.yaml -o $(ROOT_DIR)/connector-docs/redoc-policymanager/policymanager.html


.PHONY: clean
clean:
	rm -f $(ROOT_DIR)/charts/fybrik/files/taxonomy/taxonomy.json
	rm -rf $(ROOT_DIR)/pkg/taxonomy/model/policymanager/base
	mkdir -p $(ROOT_DIR)/pkg/connectors/policymanager/tmp
	cp  $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient/model.go  $(ROOT_DIR)/pkg/connectors/policymanager/tmp
	rm -rf $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient
	mkdir -p $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient
	cp  $(ROOT_DIR)/pkg/connectors/policymanager/tmp/model.go $(ROOT_DIR)/pkg/connectors/policymanager/openapiclient
	rm -rf $(ROOT_DIR)/pkg/connectors/policymanager/tmp


.PHONY: clean-server
clean-server:
	mkdir -p $(ROOT_DIR)/connectors/tmp
	cp  $(ROOT_DIR)/connectors/opa/go/model.go  $(ROOT_DIR)/connectors/tmp
	rm -rf $(ROOT_DIR)/connectors/opa
	mkdir -p $(ROOT_DIR)/connectors/opa/go
	cp  $(ROOT_DIR)/connectors/tmp/model.go $(ROOT_DIR)/connectors/opa/go
	rm -rf $(ROOT_DIR)/connectors/tmp