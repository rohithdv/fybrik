openapi: 3.0.1
info:
  license:
    name: MIT
  title: Some Swagger
  version: 1.0.0
servers:
- url: https://localhost:8080
paths:
  /getPoliciesDecisions:
    get:
      description: Multiple status values can be provided with comma separated strings
      operationId: getPoliciesDecisions
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/policymanager_request'
        description: input values that need to be considered for filter
        in: query
        name: input
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/policymanager_response'
                type: array
          description: successful operation
        "400":
          description: Invalid status value
      summary: getPoliciesDecisions
components:
  schemas:
    policymanager_request:
      additionalProperties: false
      description: This taxonomy defines the structure sent to Open Policy Agent policy
        engine, which determines whether or how the data requested may be used by
        the requester.
      properties:
        request_context:
          $ref: '#/components/schemas/request_context'
        action:
          $ref: '#/components/schemas/action'
        resource:
          $ref: '#/components/schemas/resource'
      required:
      - action
      - resource
      title: OPA Data Request Taxonomy
      type: object
    policymanager_response:
      additionalProperties: false
      description: This taxonomy defines the structure of response received from policymanager
        with enforcements.
      example:
        result:
        - policy: policy
        - policy: policy
        decision_id: decision_id
      properties:
        decision_id:
          description: This is the id returned by the governance engine
          type: string
        result:
          description: While showing the result, action contains the action type and
            the associated entity on which action has been taken.
          items:
            $ref: '#/components/schemas/policymanager_response_result'
          type: array
      required:
      - result
      title: Policymanager Data Response Taxonomy
      type: object
    request_context:
      properties:
        intent:
          $ref: '#/components/schemas/intent'
        role:
          $ref: '#/components/schemas/role'
      required:
      - intent
      type: object
    intent:
      description: The reason for which the data is to be used.
      enum:
      - Marketing
      - Customer Support
      - Fraud Detection
      - Customer Behavior Analysis
      type: string
    role:
      description: The position of the person in the organization processing the data.
      enum:
      - Sales
      - HR
      - Customer Support Executive
      - Business Analyst
      - Data Scientist
      type: string
    action:
      description: 'The action being requested on the data (ex: read, write...) and
        the geography in which it is to take place.'
      properties:
        action_type:
          $ref: '#/components/schemas/action_type'
        processingLocation:
          $ref: '#/components/schemas/geography_name'
      required:
      - action_type
      type: object
    resource:
      description: Data set or other type of resource.
      properties:
        name:
          description: Name of the data set
          type: string
        creds:
          description: location of dataset credentials
          type: string
        tags:
          additionalProperties: true
          type: object
        columns:
          description: List of column names in the data set with their associated
            tags. They must be key value pairs.
          items:
            $ref: '#/components/schemas/resource_columns'
          type: array
      required:
      - creds
      - name
      type: object
    tags:
      additionalProperties: true
      type: object
    action_1:
      description: 'Contains one of two action types '
      oneOf:
      - $ref: '#/components/schemas/action_on_columns'
      - $ref: '#/components/schemas/action_on_datasets'
      type: object
    action_on_columns:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/allowable_action_columns'
        columns:
          description: Represents the column names on which the actions have been
            taken
          items:
            type: string
          type: array
      required:
      - columns
      type: object
    allowable_action_columns:
      enum:
      - RemoveColumn
      - RedactColumn
      - EncryptColumn
      - PeriodicBlackout
      type: string
    action_on_datasets:
      properties:
        name:
          $ref: '#/components/schemas/allowable_action_dataset'
      type: object
    allowable_action_dataset:
      enum:
      - DenyAccess
      - DenyWriting
      - AllowAccess
      type: string
    action_type:
      description: The action to be taken on the data.  A mandatory object used by
        the M4D controller's logic
      enum:
      - read
      - write
      - delete
      type: string
    geography_name:
      description: Name of the geography
      enum:
      - Netherlands
      - Turkey
      type: string
    policymanager_response_result:
      example:
        policy: policy
      properties:
        action:
          $ref: '#/components/schemas/action_1'
        policy:
          description: The list of policies on which the decision was based.
          type: string
      required:
      - action
      - policy
      type: object
    resource_columns:
      properties:
        name:
          description: name of column or component
          type: string
        tags:
          additionalProperties: true
          type: object
      required:
      - name
      type: object
