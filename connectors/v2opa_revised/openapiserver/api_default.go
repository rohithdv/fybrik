/*
 * Some Swagger
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapiserver

import (
	// "encoding/json"
	"fmt"
	"net/http"
	"strings"

	openapiclient "github.com/mesh-for-data/mesh-for-data/pkg/connectors/out_go_client"
	// "github.com/gorilla/mux"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{service: s}
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{
		{
			"GetPoliciesDecisions",
			strings.ToUpper("Get"),
			"/getPoliciesDecisions",
			c.GetPoliciesDecisions,
		},
	}
}

// GetPoliciesDecisions - getPoliciesDecisions
func (c *DefaultApiController) GetPoliciesDecisions(w http.ResponseWriter, r *http.Request) {
	// query := r.URL.Query()
	// input := strings.Split(query.Get("input"), ",")
	query := r.URL.Query()
	fmt.Println("query77777")
	fmt.Println(query)

	input2 := []openapiclient.PolicymanagerRequest{}
	result, err := c.service.GetPoliciesDecisions(r.Context(), input2)
	// If an error occurred, encode the error with the status code
	if err != nil {
		EncodeJSONResponse(err.Error(), &result.Code, w)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
