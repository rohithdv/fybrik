/*
 * Some Swagger
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestContext struct for RequestContext
type RequestContext struct {
	Intent Intent `json:"intent"`
	Role *Role `json:"role,omitempty"`
}

// NewRequestContext instantiates a new RequestContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestContext(intent Intent) *RequestContext {
	this := RequestContext{}
	this.Intent = intent
	return &this
}

// NewRequestContextWithDefaults instantiates a new RequestContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestContextWithDefaults() *RequestContext {
	this := RequestContext{}
	return &this
}

// GetIntent returns the Intent field value
func (o *RequestContext) GetIntent() Intent {
	if o == nil {
		var ret Intent
		return ret
	}

	return o.Intent
}

// GetIntentOk returns a tuple with the Intent field value
// and a boolean to check if the value has been set.
func (o *RequestContext) GetIntentOk() (*Intent, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Intent, true
}

// SetIntent sets field value
func (o *RequestContext) SetIntent(v Intent) {
	o.Intent = v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *RequestContext) GetRole() Role {
	if o == nil || o.Role == nil {
		var ret Role
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestContext) GetRoleOk() (*Role, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *RequestContext) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given Role and assigns it to the Role field.
func (o *RequestContext) SetRole(v Role) {
	o.Role = &v
}

func (o RequestContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["intent"] = o.Intent
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableRequestContext struct {
	value *RequestContext
	isSet bool
}

func (v NullableRequestContext) Get() *RequestContext {
	return v.value
}

func (v *NullableRequestContext) Set(val *RequestContext) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestContext) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestContext(val *RequestContext) *NullableRequestContext {
	return &NullableRequestContext{value: val, isSet: true}
}

func (v NullableRequestContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


