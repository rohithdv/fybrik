/*
 * Some Swagger
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ActionOnColumns struct for ActionOnColumns
type ActionOnColumns struct {
	Name *AllowableActionColumns `json:"name,omitempty"`
	// Represents the column names on which the actions have been taken
	Columns []string `json:"columns"`
}

// NewActionOnColumns instantiates a new ActionOnColumns object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionOnColumns(columns []string) *ActionOnColumns {
	this := ActionOnColumns{}
	this.Columns = columns
	return &this
}

// NewActionOnColumnsWithDefaults instantiates a new ActionOnColumns object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionOnColumnsWithDefaults() *ActionOnColumns {
	this := ActionOnColumns{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActionOnColumns) GetName() AllowableActionColumns {
	if o == nil || o.Name == nil {
		var ret AllowableActionColumns
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionOnColumns) GetNameOk() (*AllowableActionColumns, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActionOnColumns) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given AllowableActionColumns and assigns it to the Name field.
func (o *ActionOnColumns) SetName(v AllowableActionColumns) {
	o.Name = &v
}

// GetColumns returns the Columns field value
func (o *ActionOnColumns) GetColumns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Columns
}

// GetColumnsOk returns a tuple with the Columns field value
// and a boolean to check if the value has been set.
func (o *ActionOnColumns) GetColumnsOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Columns, true
}

// SetColumns sets field value
func (o *ActionOnColumns) SetColumns(v []string) {
	o.Columns = v
}

func (o ActionOnColumns) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["columns"] = o.Columns
	}
	return json.Marshal(toSerialize)
}

type NullableActionOnColumns struct {
	value *ActionOnColumns
	isSet bool
}

func (v NullableActionOnColumns) Get() *ActionOnColumns {
	return v.value
}

func (v *NullableActionOnColumns) Set(val *ActionOnColumns) {
	v.value = val
	v.isSet = true
}

func (v NullableActionOnColumns) IsSet() bool {
	return v.isSet
}

func (v *NullableActionOnColumns) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionOnColumns(val *ActionOnColumns) *NullableActionOnColumns {
	return &NullableActionOnColumns{value: val, isSet: true}
}

func (v NullableActionOnColumns) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionOnColumns) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


